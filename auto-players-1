-----------------------------------------------------------------------------------------------
-- Auto key presser (WORKING)

local Players = game:GetService("Players")
local VirtualInputManager = game:GetService("VirtualInputManager")
local player = Players.LocalPlayer

local function simulateOneKeyPress()
	task.wait(1)
	VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.One, false, game)
	task.wait(0.05)
	VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.One, false, game)
end

-- Trigger on character respawn
player.CharacterAdded:Connect(function()
	simulateOneKeyPress()
end)

local Players = game:GetService("Players")
local VirtualInputManager = game:GetService("VirtualInputManager")
local player = Players.LocalPlayer

local running = false

local function startPressingR()
	if running then return end
	running = true

	while running do
		VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.R, false, game)
		task.wait(0.05)
		VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.R, false, game)
		task.wait(12)
	end
end

player.CharacterAdded:Connect(function()
	running = false
	task.wait(2)
	startPressingR()
end)

---------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------
-- no clip script (WORKING)

local player = game.Players.LocalPlayer

-- Function to handle no-clip
local function noClip(character)
    game:GetService("RunService").Stepped:Connect(function()
        if character and character.Parent then
            for _, part in pairs(character:GetDescendants()) do
                if part:IsA("BasePart") and part.CanCollide then
                    part.CanCollide = false
                end
            end
        end
    end)
end

-- Initial character no-clip
if player.Character then
    noClip(player.Character)
end

-- Re-enable no-clip on respawn
player.CharacterAdded:Connect(function(character)
    noClip(character)
end)
-------------------------------------------------------------------------------------------------------------

-------------------------------------------------------------------------------------------------------------
-- fly script (WORKING)

-- Fly Script with Velocity Reset
local player = game.Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local FlySpeed = 500 -- Adjust the speed as needed
local FlyLoop
local flying = false

-- Function to check if the player is typing (in chat or text box)
local function isTyping()
    return UserInputService:GetFocusedTextBox() ~= nil
end

local function startFlying()
    if not FlyLoop then
        FlyLoop = RunService.Stepped:Connect(function()
            spawn(function()
                pcall(function()
                    local speed = FlySpeed
                    local velocity = Vector3.new(0, 1, 0) -- Always maintain upward velocity to hover

                    if not isTyping() then
                        -- Only allow movement if not typing
                        if UserInputService:IsKeyDown(Enum.KeyCode.W) then
                            velocity = velocity + (workspace.CurrentCamera.CFrame.LookVector * speed)
                        end
                        if UserInputService:IsKeyDown(Enum.KeyCode.A) then
                            velocity = velocity + (workspace.CurrentCamera.CFrame.RightVector * -speed)
                        end
                        if UserInputService:IsKeyDown(Enum.KeyCode.S) then
                            velocity = velocity + (workspace.CurrentCamera.CFrame.LookVector * -speed)
                        end
                        if UserInputService:IsKeyDown(Enum.KeyCode.D) then
                            velocity = velocity + (workspace.CurrentCamera.CFrame.RightVector * speed)
                        end
                    end

                    -- Set the velocity to keep the player hovering in place
                    player.Character.HumanoidRootPart.Velocity = velocity
                    player.Character.Humanoid:ChangeState("Freefall")
                end)
            end)
        end)
    end
end

local function stopFlying()
    if FlyLoop then
        FlyLoop:Disconnect()
        FlyLoop = nil
        -- Reset velocity to prevent gliding
        player.Character.HumanoidRootPart.Velocity = Vector3.zero
        player.Character.Humanoid:ChangeState("Landing")
    end
end

-- Toggle fly with "V" key, but only if not typing
UserInputService.InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.V and not isTyping() then
        flying = not flying
        if flying then
            startFlying()
        else
            stopFlying()
        end
    end
end)

-- Return functions to control flying
return {
    StartFlying = startFlying,
    StopFlying = stopFlying
}
--------------------------------------------------------------------------------------------------------
